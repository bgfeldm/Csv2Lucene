<project name="Csv2Lucene" default='build' basedir="." >
   <description>
     Build Csv2Lucene Project.
   </description>

  <!-- Default property values, if not overridden elsewhere: -->
  <property name='build' location='build' />
  <property name='app.version' value='0.0.1'/>
  <property name='distro-name' value='${ant.project.name}-${app.version}'/>
  <tstamp><format property='build.time' pattern='yyyy-MM-dd HH:mm:ss'/></tstamp>

  <property file='build.properties'/>

  <path id='compile.classpath'>
    <fileset dir='lib'>
       <include name='*.jar'/>
       <include name='*.properties'/>
    </fileset>
  </path>

   <target name='clean' description="Delete all build artifacts." >
     <delete dir='${build}'/>
   </target>

   <target name='build' description='Compile source files and place beside source.'>
   	 <mkdir dir="${build}/classes"/>
     <javac 
     	srcdir="src" 
     	destdir="${build}/classes">
       <classpath refid='compile.classpath'/>
     </javac>
     <!-- Here's a simple way of debugging a path, fileset, or patternset, using its refid: -->
     <echo>Classpath: ${toString:compile.classpath}</echo>

   	<mkdir dir="${build}/classes/us/brianfeldman/lucene/ui/images"/>
   	<copy todir="${build}/classes/us/brianfeldman/lucene/ui/images" verbose="true">
   	    <fileset dir="src/us/brianfeldman/lucene/ui/images"/>
   	</copy>

    <jar destfile='${build}/dist/${distro-name}.jar' >
      <fileset dir="${build}/classes"/>
      <!-- The static manifest.mf file is merged with additional dynamic items, specified here : -->
      <manifest>
        <attribute name='Specification-Title' value='${ant.project.name}' />
      	<attribute name='Specification-Version' value='${app.version}' />
        <attribute name='Implementation-Version' value='${app.version} ${build.time}'/> 
      	<attribute name='Built-By' value='Brian G. Feldman bgfeldm@yahoo.com'/>
        <attribute name='Main-Class' value='us.brianfeldman.lucene.Indexer'/>
      </manifest>
    </jar>

</target>
	
<target name='javadoc' description='Generate javadoc.' >
    <javadoc
      use='true' author='true'  version='true'
      access='package' 
      sourcepath='src'
      packagenames='*.*' 
      destdir='${build}/javadoc'
      windowtitle='Csv2Lucene javadoc'
      noqualifier='java.*:javax.*:com.sun.*'   
      linksource='false'
      executable='C:\Program Files\Java\jdk1.7.0_21/bin/javadoc'
    >
      <classpath refid='compile.classpath'/>
      <link href='http://java.sun.com/javase/7/docs/api/'/>
      <link href='https://lucene.apache.org/core/4_7_1/core/'/>
      <link href='https://lucene.apache.org/core/4_7_1/queryparser/'/>
      <link href='https://lucene.apache.org/core/4_7_1/queries/'/>
      <link href='http://javadocs.csveed.org/'/>
      <link href='http://supercsv.sourceforge.net/apidocs/'/>
      <link href='http://javacsv.sourceforge.net/'/>

      <header><![CDATA[<h1>${ant.project.name} ${app.version}</h1>]]></header>
    </javadoc>
	
    <jar destfile='${build}/dist/${distro-name}-javadoc.jar' >
      <fileset dir="${build}/javadoc"/>
      <manifest>
        <attribute name='Specification-Title' value='${ant.project.name}' />
        <attribute name='Specification-Version' value='${app.version}' />
        <attribute name='Implementation-Version' value='${app.version} ${build.time}'/> 
        <attribute name='Built-By' value='Brian G. Feldman bgfeldm@yahoo.com'/>
        <attribute name='Main-Class' value='us.brianfeldman.lucene.Indexer'/>
      </manifest>
    </jar>
	
  </target>

  <target name='distro-binary' description='Create zip file with executable jar, docs.' depends='build, javadoc'>
    <zip destfile='${build}/dist/${distro-name}-binary.zip' duplicate='preserve'>
      <zipfileset dir='${build}/dist/' includes='${distro-name}.jar'/>
      <zipfileset dir='${build}/javadoc' prefix='javadoc' />
    </zip>
  </target>

  <target name='run-Index' description=''>
	 <java classname="us.brianfeldman.lucene.Indexer" fork='true'>
	 	<jvmarg value="-server"/>
	    <jvmarg value="-Xms1g"/>
	 	<jvmarg value="-Xmx1g"/>
        <classpath location='${build}/dist/${distro-name}.jar'/>
	 	<classpath refid='compile.classpath'/>
	 	<arg line="res/test/airports.csv"/>
	 </java>
  </target>

  <target name='run-Search' description=''>
     <java classname="us.brianfeldman.lucene.Searcher" fork='true'>
     	<jvmarg value="-Xmx512m"/>
        <classpath location='${build}/dist/${distro-name}.jar'/>
        <classpath refid='compile.classpath'/>
        <arg line="*:*"/>
     </java>
  </target>

  <target name='test-beancsv' description=''>
     <java classname='us.brianfeldman.fileformat.csv.BeanReader' fork='true'>
        <arg line="res/test/test1.csv"/>
        <classpath refid='compile.classpath'/>
        <classpath location='${build}/dist/${distro-name}.jar'/>
     </java>
  </target>	

  <target name='test-simplecsv' description=''>
         <java classname='us.brianfeldman.fileformat.csv.SimpleCSVReader' fork='true'>
            <arg line="res/test/test1.csv"/>
            <classpath refid='compile.classpath'/>
            <classpath location='${build}/dist/${distro-name}.jar'/>
         </java>
  </target>
	
  <target name='test-jcsv' description=''>
        <java classname='us.brianfeldman.fileformat.csv.JCSVReader' fork='true'>
            <arg line="res/test/test.csv"/>
            <classpath refid='compile.classpath'/>
            <classpath location='${build}/dist/${distro-name}.jar'/>
        </java>
  </target> 	

	<target name='test-javacsv' description=''>
        <java classname='us.brianfeldman.fileformat.csv.JavaCSVReader' fork='true'>
            <arg line="res/test/test.csv"/>
        	<!-- <arg line="res/test/WHO_TB_notifications_2014-03-23.csv"/> -->
            <classpath refid='compile.classpath'/>
            <classpath location='${build}/dist/${distro-name}.jar'/>
        </java>
	</target> 

  <target name='test-opencsv' description=''>
     <java classname='us.brianfeldman.fileformat.csv.OpenCSVReader' fork='true'>
        <arg line="res/test/test.csv"/>
        <classpath refid='compile.classpath'/>
        <classpath location='${build}/dist/${distro-name}.jar'/>
     </java>
  </target>

  <target name='test-supercsv' description=''>
     <java classname='us.brianfeldman.fileformat.csv.SuperCSVReader' fork='true'>
        <arg line="res/test/test.csv"/>
        <classpath refid='compile.classpath'/>
        <classpath location='${build}/dist/${distro-name}.jar'/>
     </java>
  </target>

    <target name='solr_schema-read-test' description=''>
         <java classname='us.brianfeldman.lucene.prefs.SolrSchema' fork='true'>
            <arg line="res/testSchema.xml"/>
            <classpath refid='compile.classpath'/>
            <classpath location='${build}/dist/${distro-name}.jar'/>
         </java>
	</target>

	  <target name='show-search-ui' description=''>
	        <java classname='us.brianfeldman.lucene.ui.SearchWindow' fork='true'>
	            <classpath refid='compile.classpath'/>
	            <classpath location='${build}/dist/${distro-name}.jar'/>
	        </java>
	  </target>     
	
</project>

